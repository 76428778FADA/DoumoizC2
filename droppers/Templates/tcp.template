#############################
# TEMPLATE FOR TCP DROPPERS #
#############################

# C2 Listener
port // port of C2 listener
host // host of C2 listener

-----------------------------------------------------

# Advanced Dropper Profiling
ARCH // Architecture type of victim machine so it knows what agent to pull which is done during runtime of dropper
PROC // Processor name (e.g. Intel) so it knows what agent to pull which is done during runtime of dropper

if on Windows:
    userRole // User role on the system if admin or not
    if UAC Bypass:
        umethod // UAC bypass method to use

-----------------------------------------------------

# Persistent Methods
if on disk:
    outputpath // where to save the file to disk which can come from droppers_options.json if using trusted paths on Windows
    outputname // the name of the agent

-----------------------------------------------------

# Data to send to the C2 listener
padding // 8 bytes to send to the TCP listener with the last byte being either 0x27 or 39 in dec. as that is the size of the initial send
name // UUIDv4 of dropper that is dynamically generated by dropper_handler.go
OS // Dynamically populated by dropper_handler.go so it knows what agent to pull
fullname // Full name of agent (padding + name + OS + ARCH + PROC) in bytes

-----------------------------------------------------

# Code dependent method to create the connection with the C2 Listener over TCP
channel // TCP socket or channel to send data

-----------------------------------------------------
    
Start the socket and send the data over TCP to the C2 listener

-----------------------------------------------------

# Response from the C2 Listener and execution of the agent
Grab the output or the agent and:
    if on disk:
        Store in outputfile
    if in memory:
        Execute in memory